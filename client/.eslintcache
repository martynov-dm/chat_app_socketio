[{"/home/dmitrii/github_repos/slack-copy/client/src/index.tsx":"1","/home/dmitrii/github_repos/slack-copy/client/src/reportWebVitals.ts":"2","/home/dmitrii/github_repos/slack-copy/client/src/App.tsx":"3","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Sidebar.tsx":"4","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MainWindow.tsx":"5","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Description/Channels.tsx":"6","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomList.tsx":"7","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/CreateServer/CreateServer.tsx":"8","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomItem.tsx":"9","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageList.tsx":"10","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageItem.tsx":"11","/home/dmitrii/github_repos/slack-copy/client/src/components/common/ThemeToggler.tsx":"12","/home/dmitrii/github_repos/slack-copy/client/src/api/api.ts":"13","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.actions.ts":"14","/home/dmitrii/github_repos/slack-copy/client/src/redux/store.ts":"15","/home/dmitrii/github_repos/slack-copy/client/src/redux/root-reducer.ts":"16","/home/dmitrii/github_repos/slack-copy/client/src/redux/root-saga.ts":"17","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.sagas.ts":"18","/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/ImageCropper.tsx":"19","/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/cropImage.ts":"20","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.reducer.ts":"21","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.selectors.ts":"22","/home/dmitrii/github_repos/slack-copy/client/src/components/common/ErrorPopUp.tsx":"23","/home/dmitrii/github_repos/slack-copy/client/src/pages/Main.tsx":"24","/home/dmitrii/github_repos/slack-copy/client/src/pages/SignUp.tsx":"25","/home/dmitrii/github_repos/slack-copy/client/src/pages/SignIn.tsx":"26","/home/dmitrii/github_repos/slack-copy/client/src/components/SidebarHeader/SidebarHeader.tsx":"27","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/UserMenu/UserMenu.tsx":"28","/home/dmitrii/github_repos/slack-copy/client/src/socket.io/socket.tsx":"29","/home/dmitrii/github_repos/slack-copy/client/src/components/ServersList/ServersList.tsx":"30","/home/dmitrii/github_repos/slack-copy/client/src/components/ServersList/ServerItem/ServerItem.tsx":"31","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageInput/MessageInput.tsx":"32","/home/dmitrii/github_repos/slack-copy/client/src/redux/serverRoomMessage/serverRoomMessage.reducer.ts":"33","/home/dmitrii/github_repos/slack-copy/client/src/redux/serverRoomMessage/serverRoomMessage.actions.ts":"34","/home/dmitrii/github_repos/slack-copy/client/src/redux/serverRoomMessage/serverRoomMessage.selectors.ts":"35","/home/dmitrii/github_repos/slack-copy/client/src/components/RoomHeader/RoomHeader.tsx":"36","/home/dmitrii/github_repos/slack-copy/client/src/redux/serverRoomMessage/utils.ts":"37","/home/dmitrii/github_repos/slack-copy/client/src/components/Drawer/Drawer.tsx":"38","/home/dmitrii/github_repos/slack-copy/client/src/components/common/Modal.tsx":"39"},{"size":741,"mtime":1609248425190,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":1608036149411,"results":"42","hashOfConfig":"41"},{"size":971,"mtime":1610349005960,"results":"43","hashOfConfig":"41"},{"size":1807,"mtime":1610303667782,"results":"44","hashOfConfig":"41"},{"size":699,"mtime":1610091128571,"results":"45","hashOfConfig":"41"},{"size":690,"mtime":1608486839070,"results":"46","hashOfConfig":"41"},{"size":748,"mtime":1610348843500,"results":"47","hashOfConfig":"41"},{"size":777,"mtime":1608642400529,"results":"48","hashOfConfig":"41"},{"size":1058,"mtime":1610348975210,"results":"49","hashOfConfig":"41"},{"size":982,"mtime":1609845323000,"results":"50","hashOfConfig":"41"},{"size":2030,"mtime":1610349006060,"results":"51","hashOfConfig":"41"},{"size":802,"mtime":1610112585921,"results":"52","hashOfConfig":"41"},{"size":790,"mtime":1609140554410,"results":"53","hashOfConfig":"41"},{"size":1302,"mtime":1610192942220,"results":"54","hashOfConfig":"41"},{"size":1033,"mtime":1609059307470,"results":"55","hashOfConfig":"41"},{"size":433,"mtime":1609661302675,"results":"56","hashOfConfig":"41"},{"size":175,"mtime":1608713974353,"results":"57","hashOfConfig":"41"},{"size":1439,"mtime":1609823484290,"results":"58","hashOfConfig":"41"},{"size":2486,"mtime":1609080441030,"results":"59","hashOfConfig":"41"},{"size":1139,"mtime":1609051398130,"results":"60","hashOfConfig":"41"},{"size":2351,"mtime":1610258565632,"results":"61","hashOfConfig":"41"},{"size":1355,"mtime":1610257738902,"results":"62","hashOfConfig":"41"},{"size":898,"mtime":1609142163340,"results":"63","hashOfConfig":"41"},{"size":1146,"mtime":1610348783210,"results":"64","hashOfConfig":"41"},{"size":8562,"mtime":1609953096410,"results":"65","hashOfConfig":"41"},{"size":3706,"mtime":1609952986640,"results":"66","hashOfConfig":"41"},{"size":3077,"mtime":1610348975210,"results":"67","hashOfConfig":"41"},{"size":683,"mtime":1610349006010,"results":"68","hashOfConfig":"41"},{"size":3831,"mtime":1610351479190,"results":"69","hashOfConfig":"41"},{"size":882,"mtime":1610103145421,"results":"70","hashOfConfig":"41"},{"size":700,"mtime":1610112504931,"results":"71","hashOfConfig":"41"},{"size":2032,"mtime":1610112671031,"results":"72","hashOfConfig":"41"},{"size":2215,"mtime":1610348883160,"results":"73","hashOfConfig":"41"},{"size":1504,"mtime":1610346139380,"results":"74","hashOfConfig":"41"},{"size":1974,"mtime":1610290360602,"results":"75","hashOfConfig":"41"},{"size":5805,"mtime":1610112616541,"results":"76","hashOfConfig":"41"},{"size":288,"mtime":1609763468147,"results":"77","hashOfConfig":"41"},{"size":4663,"mtime":1610348856600,"results":"78","hashOfConfig":"41"},{"size":1750,"mtime":1610348497520,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"gp4d3u",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/home/dmitrii/github_repos/slack-copy/client/src/index.tsx",[],["166","167"],"/home/dmitrii/github_repos/slack-copy/client/src/reportWebVitals.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/App.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Sidebar.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MainWindow.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Description/Channels.tsx",[],["168","169"],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomList.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/CreateServer/CreateServer.tsx",[],["170","171"],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomItem.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageList.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageItem.tsx",["172"],"import { Avatar, Box, Heading, Image, Text } from '@chakra-ui/react'\nimport { css } from '@emotion/react'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectUserLogin } from '../../../redux/auth/auth.selectors'\n\ninterface Iprops {\n  avatar: string\n  username: string\n  time: Date | string\n  text: string\n}\n\nconst MessageItem = (props: Iprops) => {\n  const { avatar, username, time, text } = props\n  const convertedDate = new Date(time).toLocaleString()\n  const currentUserLogin = useSelector(selectUserLogin)\n\n  return (\n    <Box\n      boxShadow='base'\n      borderWidth='1px'\n      borderRadius='lg'\n      maxWidth={{ md: '22rem', lg: '35rem' }}\n      my='0.7rem'\n      css={css`\n        padding: 0.8rem 0.3rem;\n        display: flex;\n        width: 100%;\n        height: auto;\n\n        /* min-height: 4.5rem; */\n        align-self: ${currentUserLogin === username\n          ? 'flex-end'\n          : 'flex-start'};\n        align-items: center;\n\n        .text {\n          margin-left: 1rem;\n          display: flex;\n          flex-direction: column;\n\n          .message {\n            line-height: 1.4rem;\n            white-space: pre-wrap;\n            font-size: 1.1rem;\n            display: inline-block;\n            word-break: break-word;\n          }\n\n          .name-date {\n            display: flex;\n            align-items: center;\n            justify-content: flex-start;\n            margin-bottom: 0.3rem;\n\n            .date {\n              margin-left: 0.7rem;\n              font-size: 0.8rem;\n            }\n          }\n        }\n      `}\n    >\n      <Box ml='1rem'>\n        <Avatar width='3rem' borderRadius='50%' src={avatar} alt='ava' />\n      </Box>\n      <div className='text'>\n        <div className='name-date'>\n          <Heading as='h5' size='sm' className='name'>\n            {username}\n          </Heading>\n          <Text className='date'>{convertedDate}</Text>\n        </div>\n\n        <Text className='message'>{text}</Text>\n      </div>\n    </Box>\n  )\n}\n\nexport default MessageItem\n","/home/dmitrii/github_repos/slack-copy/client/src/components/common/ThemeToggler.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/api/api.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.actions.ts",["173"],"import { InferActionTypes, ILoginAndPassword, IUser } from './../../types/types'\nimport { ILoginPasswordAvatar } from '../../types/types'\n\nexport type AuthActionTypes = InferActionTypes<typeof authActions>\n\nexport const authActions = {\n  signUpStart: (loginPasswordAvatar: ILoginPasswordAvatar) => {\n    return {\n      type: 'SIGN_UP_START',\n      payload: loginPasswordAvatar,\n    } as const\n  },\n  signUpSuccess: () => {\n    return {\n      type: 'SIGN_UP_SUCCESS',\n    } as const\n  },\n  signUpFailure: (errorMessage: string) => {\n    return {\n      type: 'SIGN_UP_FAILURE',\n      payload: errorMessage,\n    } as const\n  },\n  signUpClear: () => {\n    return {\n      type: 'SIGN_UP_CLEAR',\n    } as const\n  },\n  signInStart: (loginAndPassword: ILoginAndPassword) => {\n    return {\n      type: 'SIGN_IN_START',\n      payload: loginAndPassword,\n    } as const\n  },\n  signInSuccess: () => {\n    return {\n      type: 'SIGN_IN_SUCCESS',\n    } as const\n  },\n  signInFailure: (errorMessage: string) => {\n    return {\n      type: 'SIGN_IN_FAILURE',\n      payload: errorMessage,\n    } as const\n  },\n  signInClear: () => {\n    return {\n      type: 'SIGN_IN_CLEAR',\n    } as const\n  },\n  addUserData: (userData: IUser) => {\n    return {\n      type: 'ADD_USER_DATA',\n      payload: userData,\n    } as const\n  },\n}\n","/home/dmitrii/github_repos/slack-copy/client/src/redux/store.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/root-reducer.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/root-saga.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.sagas.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/ImageCropper.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/cropImage.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.reducer.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.selectors.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/common/ErrorPopUp.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/pages/Main.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/pages/SignUp.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/pages/SignIn.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/SidebarHeader/SidebarHeader.tsx",["174"],"import React from 'react'\nimport { css } from '@emotion/react'\nimport { Heading, Text, useColorModeValue } from '@chakra-ui/react'\nimport { useSelector } from 'react-redux'\nimport { selectCurrentServerTitle } from '../../redux/serverRoomMessage/serverRoomMessage.selectors'\n\nconst SidebarHeader = (props: any) => {\n  const bgColor = useColorModeValue('#EDF2F7', '#2D3748')\n  const serverTitle = useSelector(selectCurrentServerTitle)\n\n  return (\n    <header\n      css={css`\n        width: 100%;\n        grid-column: 2/3;\n        grid-row: 1/2;\n\n        background-color: ${bgColor};\n\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        &:after {\n          display: block;\n          content: '.';\n          font-size: 0;\n          color: transparent;\n          height: 7px;\n          width: 100%;\n          padding-left: 4px;\n          position: absolute;\n          bottom: -7px;\n\n          /* background: ${bgColor}; */\n          box-shadow: inset 0px 7px 6px -6px rgba(0, 0, 0, 0.25);\n        }\n      `}\n    >\n      <div>\n        <Heading as='h4' size='md'>\n          {serverTitle}\n        </Heading>\n      </div>\n    </header>\n  )\n}\n\nexport default SidebarHeader\n\n// import React from 'react'\n// import styled from 'styled-components'\n// import { BsFillPeopleFill } from 'react-icons/bs'\n// import { css } from '@emotion/react'\n// import ThemeToggler from '../../common/ThemeToggler'\n\n// const RoomTitleStyles = styled.div`\n//   font-size: 1.38rem;\n//   color: rgba(23, 26, 42, 0.7);\n//   justify-self: end;\n// `\n// const RoomPeopleStyles = styled.button`\n//   width: 3.3rem;\n//   height: 2.2rem;\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   color: rgba(23, 26, 42, 0.7);\n//   background-color: #fff;\n\n//   svg {\n//     fill: rgba(23, 26, 42, 0.7);\n\n//     width: 1.2rem;\n//     height: 1.2rem;\n//   }\n// `\n\n// const RoomHeader = () => {\n//   return (\n//     <header\n//       css={css`\n//         box-shadow: 0px 7px 16px 0px rgba(0, 0, 0, 0.71);\n//         display: flex;\n//         align-items: center;\n//         justify-content: center;\n//         padding: 0.62rem;\n//         height: 4.8rem;\n//         width: 100%;\n//       `}\n//     >\n//       <div style={{ flexGrow: 1 }}></div>\n//       <RoomTitleStyles>\n//         <h1># general</h1>\n//       </RoomTitleStyles>\n//       <div style={{ flexGrow: 1 }}></div>\n\n//       <ThemeToggler />\n//     </header>\n//   )\n// }\n\n// export default RoomHeader\n\n// import React from 'react'\n// import { css } from '@emotion/react'\n\n// const UserHeader: React.FC = () => {\n//   return (\n//     <header\n//       css={css`\n//         box-shadow: 0px 7px 16px 0px rgba(0, 0, 0, 0.71);\n//         z-index: 1;\n//         display: flex;\n//         align-items: center;\n//         padding: 1rem;\n//         height: 4.8rem;\n//         color: rgba(23, 26, 42, 0.7);\n//         font-weight: normal;\n//       `}\n//     >\n//       <div>\n//         <h3>Dmitrii</h3>\n//       </div>\n//     </header>\n//   )\n// }\n\n// export default UserHeader\n","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/UserMenu/UserMenu.tsx",["175"],"import { Avatar, Flex, Heading, useColorModeValue } from '@chakra-ui/react'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { css } from '@emotion/react'\n\nimport {\n  selectUserLogin,\n  selectUserAvatar,\n} from '../../../redux/auth/auth.selectors'\n\nconst UserMenu = (props: any) => {\n  const bgColor = useColorModeValue('gray.200', 'gray.800')\n  const login = useSelector(selectUserLogin)\n  const avatar = useSelector(selectUserAvatar)\n\n  return (\n    <Flex mt='auto' shrink={1} h='4rem' bg={bgColor} align='center'>\n      <Avatar ml='1.5rem' name={login} src={avatar} />\n      <Heading ml='1.5rem' as='h4' size='md'>\n        {login}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default UserMenu\n","/home/dmitrii/github_repos/slack-copy/client/src/socket.io/socket.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ServersList/ServersList.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ServersList/ServerItem/ServerItem.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageInput/MessageInput.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/serverRoomMessage/serverRoomMessage.reducer.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/serverRoomMessage/serverRoomMessage.actions.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/serverRoomMessage/serverRoomMessage.selectors.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/RoomHeader/RoomHeader.tsx",["176"],"import React from 'react'\nimport { css } from '@emotion/react'\nimport ThemeToggler from '../common/ThemeToggler'\nimport {\n  Avatar,\n  Flex,\n  Heading,\n  IconButton,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverCloseButton,\n  PopoverContent,\n  PopoverHeader,\n  PopoverTrigger,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n} from '@chakra-ui/react'\nimport { Icon } from '@chakra-ui/react'\nimport { BsFillPeopleFill } from 'react-icons/bs'\nimport { useSelector } from 'react-redux'\nimport { HamburgerIcon } from '@chakra-ui/icons'\nimport {\n  selectCurrentRoomName,\n  selectCurrentRoomUserCount,\n  selectUsersArr,\n} from '../../redux/serverRoomMessage/serverRoomMessage.selectors'\nimport Drawer from '../Drawer/Drawer'\nimport { useMediaQuery } from '@material-ui/core'\n\nconst RoomHeader = (props: any) => {\n  const bgColor = useColorModeValue('#EDF2F7', '#2D3748')\n  const userCount = useSelector(selectCurrentRoomUserCount)\n  const currentRoomName = useSelector(selectCurrentRoomName)\n  const usersList = useSelector(selectUsersArr)\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const btnRef = React.useRef(null)\n  const isLessThan767px = useMediaQuery('(max-width: 767px)')\n\n  return (\n    <header\n      css={css`\n        grid-column: 3/4;\n        grid-row: 1/2;\n\n        position: relative;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        /* justify-content: center; */\n\n        z-index: 1;\n\n        background-color: ${bgColor};\n        &:after {\n          display: block;\n          content: '.';\n          font-size: 0;\n          color: transparent;\n          height: 7px;\n          width: 100%;\n          padding-left: 4px;\n          position: absolute;\n          bottom: -7px;\n\n          box-shadow: inset 0px 7px 6px -6px rgba(0, 0, 0, 0.25);\n        }\n      `}\n    >\n      {isLessThan767px && (\n        <>\n          <Drawer\n            btnRef={btnRef}\n            isOpen={isOpen}\n            onOpen={onOpen}\n            onClose={onClose}\n          />\n          <IconButton\n            ref={btnRef}\n            onClick={onOpen}\n            ml='2rem'\n            aria-label='Toggle day/night'\n            icon={\n              <HamburgerIcon\n                w='1.6rem'\n                h='1.6rem'\n                css={css`\n                  opacity: 1;\n                `}\n              />\n            }\n            variant='ghost'\n          />\n        </>\n      )}\n\n      <Heading\n        as='h4'\n        size='md'\n        css={css`\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n        `}\n      >\n        {currentRoomName}\n      </Heading>\n      <ThemeToggler />\n\n      <Popover>\n        <PopoverTrigger>\n          <IconButton\n            css={css`\n              &:hover {\n                opacity: 0.8;\n              }\n            `}\n            mr='2rem'\n            aria-label='Toggle day/night'\n            icon={\n              <>\n                <Icon h='1.6rem' w='1.6rem' as={BsFillPeopleFill} />\n                <Text ml='0.2rem' fontSize='xl'>\n                  {userCount}\n                </Text>\n              </>\n            }\n            variant='ghost'\n          />\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverArrow />\n          <PopoverCloseButton />\n          <PopoverHeader>Users list</PopoverHeader>\n          {usersList.map((user) => {\n            return (\n              <PopoverBody\n                key={user._id}\n                css={css`\n                  display: flex;\n                  align-items: center;\n                `}\n              >\n                <Avatar size='md' name={user.login} src={user.avatar} />\n                <Text ml='2rem' fontSize='lg'>\n                  {user.login}\n                </Text>\n              </PopoverBody>\n            )\n          })}\n        </PopoverContent>\n      </Popover>\n    </header>\n  )\n}\n\nexport default RoomHeader\n\n// import React from 'react'\n// import styled from 'styled-components'\n// import { BsFillPeopleFill } from 'react-icons/bs'\n// import { css } from '@emotion/react'\n// import ThemeToggler from '../../common/ThemeToggler'\n\n// const RoomTitleStyles = styled.div`\n//   font-size: 1.38rem;\n//   color: rgba(23, 26, 42, 0.7);\n//   justify-self: end;\n// `\n// const RoomPeopleStyles = styled.button`\n//   width: 3.3rem;\n//   height: 2.2rem;\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   color: rgba(23, 26, 42, 0.7);\n//   background-color: #fff;\n\n//   svg {\n//     fill: rgba(23, 26, 42, 0.7);\n\n//     width: 1.2rem;\n//     height: 1.2rem;\n//   }\n// `\n\n// const RoomHeader = () => {\n//   return (\n//     <header\n//       css={css`\n//         box-shadow: 0px 7px 16px 0px rgba(0, 0, 0, 0.71);\n//         display: flex;\n//         align-items: center;\n//         justify-content: center;\n//         padding: 0.62rem;\n//         height: 4.8rem;\n//         width: 100%;\n//       `}\n//     >\n//       <div style={{ flexGrow: 1 }}></div>\n//       <RoomTitleStyles>\n//         <h1># general</h1>\n//       </RoomTitleStyles>\n//       <div style={{ flexGrow: 1 }}></div>\n\n//       <ThemeToggler />\n//     </header>\n//   )\n// }\n\n// export default RoomHeader\n\n// import React from 'react'\n// import { css } from '@emotion/react'\n\n// const UserHeader: React.FC = () => {\n//   return (\n//     <header\n//       css={css`\n//         box-shadow: 0px 7px 16px 0px rgba(0, 0, 0, 0.71);\n//         z-index: 1;\n//         display: flex;\n//         align-items: center;\n//         padding: 1rem;\n//         height: 4.8rem;\n//         color: rgba(23, 26, 42, 0.7);\n//         font-weight: normal;\n//       `}\n//     >\n//       <div>\n//         <h3>Dmitrii</h3>\n//       </div>\n//     </header>\n//   )\n// }\n\n// export default UserHeader\n","/home/dmitrii/github_repos/slack-copy/client/src/redux/serverRoomMessage/utils.ts",["177"],"/home/dmitrii/github_repos/slack-copy/client/src/components/Drawer/Drawer.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/common/Modal.tsx",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"178","replacedBy":"182"},{"ruleId":"180","replacedBy":"183"},{"ruleId":"178","replacedBy":"184"},{"ruleId":"180","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":32,"nodeType":"188","messageId":"189","endLine":1,"endColumn":37},{"ruleId":"186","severity":1,"message":"190","line":1,"column":47,"nodeType":"188","messageId":"189","endLine":1,"endColumn":52},{"ruleId":"186","severity":1,"message":"191","line":3,"column":19,"nodeType":"188","messageId":"189","endLine":3,"endColumn":23},{"ruleId":"186","severity":1,"message":"192","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":13},{"ruleId":"186","severity":1,"message":"193","line":6,"column":3,"nodeType":"188","messageId":"189","endLine":6,"endColumn":7},{"ruleId":"194","severity":1,"message":"195","line":5,"column":40,"nodeType":"196","messageId":"197","endLine":5,"endColumn":42},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],["198"],["199"],["198"],["199"],"@typescript-eslint/no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'IUser' is defined but never used.","'Text' is defined but never used.","'css' is defined but never used.","'Flex' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]