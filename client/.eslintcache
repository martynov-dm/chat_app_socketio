[{"/home/dmitrii/github_repos/slack-copy/client/src/index.tsx":"1","/home/dmitrii/github_repos/slack-copy/client/src/reportWebVitals.ts":"2","/home/dmitrii/github_repos/slack-copy/client/src/App.tsx":"3","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Sidebar.tsx":"4","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MainWindow.tsx":"5","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Description/Channels.tsx":"6","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomList.tsx":"7","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/CreateServer/CreateServer.tsx":"8","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomItem.tsx":"9","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageList.tsx":"10","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageItem.tsx":"11","/home/dmitrii/github_repos/slack-copy/client/src/components/common/ThemeToggler.tsx":"12","/home/dmitrii/github_repos/slack-copy/client/src/api/api.ts":"13","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.actions.ts":"14","/home/dmitrii/github_repos/slack-copy/client/src/redux/store.ts":"15","/home/dmitrii/github_repos/slack-copy/client/src/redux/root-reducer.ts":"16","/home/dmitrii/github_repos/slack-copy/client/src/redux/root-saga.ts":"17","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.sagas.ts":"18","/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/ImageCropper.tsx":"19","/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/cropImage.ts":"20","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.reducer.ts":"21","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.selectors.ts":"22","/home/dmitrii/github_repos/slack-copy/client/src/components/common/ErrorPopUp.tsx":"23","/home/dmitrii/github_repos/slack-copy/client/src/pages/Main.tsx":"24","/home/dmitrii/github_repos/slack-copy/client/src/pages/SignUp.tsx":"25","/home/dmitrii/github_repos/slack-copy/client/src/pages/SignIn.tsx":"26","/home/dmitrii/github_repos/slack-copy/client/src/components/SidebarHeader/SidebarHeader.tsx":"27","/home/dmitrii/github_repos/slack-copy/client/src/components/ChannelHeader/ChannelHeader.tsx":"28","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/UserMenu/UserMenu.tsx":"29","/home/dmitrii/github_repos/slack-copy/client/src/socket.io/socket.tsx":"30","/home/dmitrii/github_repos/slack-copy/client/src/redux/messages/messages.reducer.ts":"31","/home/dmitrii/github_repos/slack-copy/client/src/redux/messages/messages.actions.ts":"32","/home/dmitrii/github_repos/slack-copy/client/src/redux/messages/messages.selectors.ts":"33","/home/dmitrii/github_repos/slack-copy/client/src/components/ServersList/ServersList.tsx":"34","/home/dmitrii/github_repos/slack-copy/client/src/components/ServersList/ServerItem/ServerItem.tsx":"35","/home/dmitrii/github_repos/slack-copy/client/src/redux/servers/servers.actions.ts":"36","/home/dmitrii/github_repos/slack-copy/client/src/redux/servers/servers.reducer.ts":"37","/home/dmitrii/github_repos/slack-copy/client/src/redux/servers/servers.selectors.ts":"38","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageInput/MessageInput.tsx":"39","/home/dmitrii/github_repos/slack-copy/client/src/redux/rooms/rooms.reducer.ts":"40","/home/dmitrii/github_repos/slack-copy/client/src/redux/rooms/rooms.actions.ts":"41","/home/dmitrii/github_repos/slack-copy/client/src/redux/rooms/rooms.selectors.ts":"42"},{"size":741,"mtime":1609248425190,"results":"43","hashOfConfig":"44"},{"size":425,"mtime":1608036149411,"results":"45","hashOfConfig":"44"},{"size":882,"mtime":1609316057201,"results":"46","hashOfConfig":"44"},{"size":752,"mtime":1609302701461,"results":"47","hashOfConfig":"44"},{"size":713,"mtime":1609315195161,"results":"48","hashOfConfig":"44"},{"size":690,"mtime":1608486839070,"results":"49","hashOfConfig":"44"},{"size":707,"mtime":1609317945731,"results":"50","hashOfConfig":"44"},{"size":777,"mtime":1608642400529,"results":"51","hashOfConfig":"44"},{"size":740,"mtime":1609323524510,"results":"52","hashOfConfig":"44"},{"size":707,"mtime":1609249086310,"results":"53","hashOfConfig":"44"},{"size":1290,"mtime":1609245701650,"results":"54","hashOfConfig":"44"},{"size":606,"mtime":1608997175150,"results":"55","hashOfConfig":"44"},{"size":790,"mtime":1609140554410,"results":"56","hashOfConfig":"44"},{"size":1170,"mtime":1609140339690,"results":"57","hashOfConfig":"44"},{"size":1033,"mtime":1609059307470,"results":"58","hashOfConfig":"44"},{"size":539,"mtime":1609316792791,"results":"59","hashOfConfig":"44"},{"size":175,"mtime":1608713974353,"results":"60","hashOfConfig":"44"},{"size":1438,"mtime":1609143165390,"results":"61","hashOfConfig":"44"},{"size":2486,"mtime":1609080441030,"results":"62","hashOfConfig":"44"},{"size":1139,"mtime":1609051398130,"results":"63","hashOfConfig":"44"},{"size":1967,"mtime":1609139242790,"results":"64","hashOfConfig":"44"},{"size":806,"mtime":1609139461090,"results":"65","hashOfConfig":"44"},{"size":898,"mtime":1609142163340,"results":"66","hashOfConfig":"44"},{"size":999,"mtime":1609316057301,"results":"67","hashOfConfig":"44"},{"size":8318,"mtime":1609217777660,"results":"68","hashOfConfig":"44"},{"size":3520,"mtime":1609141396390,"results":"69","hashOfConfig":"44"},{"size":2809,"mtime":1609301491301,"results":"70","hashOfConfig":"44"},{"size":2887,"mtime":1609301491301,"results":"71","hashOfConfig":"44"},{"size":347,"mtime":1609175137100,"results":"72","hashOfConfig":"44"},{"size":1650,"mtime":1609317040961,"results":"73","hashOfConfig":"44"},{"size":493,"mtime":1609249119600,"results":"74","hashOfConfig":"44"},{"size":293,"mtime":1609245007120,"results":"75","hashOfConfig":"44"},{"size":252,"mtime":1609245171900,"results":"76","hashOfConfig":"44"},{"size":669,"mtime":1609312879331,"results":"77","hashOfConfig":"44"},{"size":532,"mtime":1609313152581,"results":"78","hashOfConfig":"44"},{"size":303,"mtime":1609311915641,"results":"79","hashOfConfig":"44"},{"size":503,"mtime":1609312034071,"results":"80","hashOfConfig":"44"},{"size":245,"mtime":1609312159481,"results":"81","hashOfConfig":"44"},{"size":1453,"mtime":1609315195421,"results":"82","hashOfConfig":"44"},{"size":483,"mtime":1609316812091,"results":"83","hashOfConfig":"44"},{"size":291,"mtime":1609316905761,"results":"84","hashOfConfig":"44"},{"size":231,"mtime":1609317132681,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"gp4d3u",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/dmitrii/github_repos/slack-copy/client/src/index.tsx",[],["182","183"],"/home/dmitrii/github_repos/slack-copy/client/src/reportWebVitals.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/App.tsx",["184"],"import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\nimport Main from './pages/Main'\nimport SignUp from './pages/SignUp'\nimport { history } from './redux/store'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport SignIn from './pages/SignIn'\nimport ErrorPopUp from './components/common/ErrorPopUp'\nimport { SocketProvider } from './socket.io/socket'\n\nconst App: React.FC = () => {\n  return (\n    <ChakraProvider>\n      <ConnectedRouter history={history}>\n        <SocketProvider>\n          <Switch>\n            <Route exact path='/' component={Main} />\n            <Route exact path='/sign-in' component={SignIn} />\n            <Route exact path='/sign-up' component={SignUp} />\n          </Switch>\n        </SocketProvider>\n      </ConnectedRouter>\n    </ChakraProvider>\n  )\n}\n\nexport default App\n","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Sidebar.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MainWindow.tsx",["185"],"import React from 'react'\nimport { css } from '@emotion/react'\n\nimport styled from 'styled-components'\nimport MessageList from './MessageList/MessageList'\nimport MessageInput from './MessageInput/MessageInput'\nimport { useColorModeValue } from '@chakra-ui/react'\n\nconst MainWindow = () => {\n  const bgColor = useColorModeValue('#FFFFFF', '#2D3748')\n\n  return (\n    <section\n      css={css`\n        grid-column: 3/4;\n        grid-row: 2/3;\n\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n\n        background-color: ${bgColor};\n      `}\n    >\n      <MessageList />\n      <MessageInput />\n    </section>\n  )\n}\n\nexport default MainWindow\n","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Description/Channels.tsx",[],["186","187"],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomList.tsx",["188"],"import React from 'react'\nimport styled from 'styled-components'\nimport RoomItem from './RoomItem'\nimport { css } from '@emotion/react'\nimport { useSelector } from 'react-redux'\nimport { selectRoomsArr } from '../../../redux/rooms/rooms.selectors'\n\nconst RoomList = () => {\n  const rooms = useSelector(selectRoomsArr)\n\n  return (\n    <section\n      css={css`\n        display: flex;\n        flex-direction: column;\n        margin-left: 2.5rem;\n      `}\n    >\n      {rooms.map((room) => (\n        <RoomItem\n          key={room.roomId}\n          title={room.roomTitle}\n          namespace={room.namespace}\n          isPrivate={room.isPrivate}\n        />\n      ))}\n    </section>\n  )\n}\n\nexport default RoomList\n","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/CreateServer/CreateServer.tsx",[],["189","190"],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomItem.tsx",["191","192","193"],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageList.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageItem.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/common/ThemeToggler.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/api/api.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.actions.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/store.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/root-reducer.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/root-saga.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.sagas.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/ImageCropper.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/cropImage.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.reducer.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.selectors.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/common/ErrorPopUp.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/pages/Main.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/pages/SignUp.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/pages/SignIn.tsx",["194","195"],"import { css } from '@emotion/react'\nimport React, { useRef, useState } from 'react'\nimport ThemeToggler from '../components/common/ThemeToggler'\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n} from '@chakra-ui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons'\n\nimport { authActions } from '../redux/auth/auth.actions'\nimport {\n  selectSignInReqError,\n  selectSignInReqStatus,\n} from '../redux/auth/auth.selectors'\nimport ErrorPopUp from '../components/common/ErrorPopUp'\n\nconst SignIn = () => {\n  const dispatch = useDispatch()\n  const status = useSelector(selectSignInReqStatus)\n  const errMessage = useSelector(selectSignInReqError)\n\n  const [login, setLogin] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [showPassword, setShowPassword] = useState(false)\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword)\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault()\n    dispatch(authActions.signInStart({ login, password }))\n  }\n\n  return (\n    <>\n      <ThemeToggler />\n\n      <Flex width='full' align='center' justifyContent='center'>\n        <Box\n          p={8}\n          maxWidth='500px'\n          borderWidth={1}\n          borderRadius={8}\n          boxShadow='lg'\n        >\n          <Box textAlign='center'>\n            <Heading>Login</Heading>\n          </Box>\n          <Box my={4} textAlign='left'>\n            <form onSubmit={handleSubmit}>\n              <FormControl mt={4} isRequired>\n                <FormLabel>Login</FormLabel>\n                <Input\n                  value={login}\n                  placeholder='Your login'\n                  size='lg'\n                  onChange={(event) => setLogin(event.currentTarget.value)}\n                />\n              </FormControl>\n              <FormControl mt={6} isRequired>\n                <FormLabel>Password</FormLabel>\n                <InputGroup>\n                  <Input\n                    value={password}\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder='*******'\n                    size='lg'\n                    onChange={(event) => setPassword(event.currentTarget.value)}\n                  />\n                  <InputRightElement width='3rem'>\n                    <IconButton\n                      mt={2}\n                      aria-label='toggle passwod visibility'\n                      size='md'\n                      onClick={handlePasswordVisibility}\n                      icon={showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                    />\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Button\n                type='submit'\n                colorScheme='blue'\n                variant='outline'\n                width='full'\n                mt={4}\n              >\n                {status === 'loading' ? (\n                  <CircularProgress\n                    size='30px'\n                    isIndeterminate\n                    color='blue.300'\n                  />\n                ) : (\n                  'Sign In'\n                )}\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Flex>\n\n      <ErrorPopUp\n        errMessage={errMessage}\n        clearAction={authActions.signInClear}\n      />\n    </>\n  )\n}\n\nexport default SignIn\n","/home/dmitrii/github_repos/slack-copy/client/src/components/SidebarHeader/SidebarHeader.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ChannelHeader/ChannelHeader.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/UserMenu/UserMenu.tsx",["196"],"import { Flex, useColorModeValue } from '@chakra-ui/react'\nimport React from 'react'\nimport { css } from '@emotion/react'\n\nconst UserMenu = (props: any) => {\n  const bgColor = useColorModeValue('gray.200', 'gray.900')\n\n  return (\n    <Flex mt='auto' h='4rem' bg={bgColor} boxShadow='2xl'>\n      UserMenu\n    </Flex>\n  )\n}\n\nexport default UserMenu\n","/home/dmitrii/github_repos/slack-copy/client/src/socket.io/socket.tsx",["197"],"import React, { createContext } from 'react'\nimport socketIOClient, { Socket } from 'socket.io-client'\nimport { useDispatch } from 'react-redux'\nimport { messagesActions } from '../redux/messages/messages.actions'\nimport { serversActions } from '../redux/servers/servers.actions'\nimport { roomsActions } from '../redux/rooms/rooms.actions'\n\nexport const SocketContext = createContext(null as any)\n\ninterface Iprops {\n  children: React.ReactNode\n}\n\nexport const SocketProvider = (props: Iprops) => {\n  const { children } = props\n  let socket: Socket\n  let nsSocket: Socket\n  let ws\n\n  const dispatch = useDispatch()\n\n  const initialize = () => {\n    socket = socketIOClient.io('http://localhost:5000')\n\n    socket.on('nsList', (nsData: any) => {\n      dispatch(serversActions.addInitialServers(nsData))\n    })\n\n    nsSocket = socketIOClient.io('http://localhost:5000/wiki')\n    nsSocket.on('nsRoomLoad', (nsRooms: any) => {\n      dispatch(roomsActions.addInitialRooms(nsRooms))\n    })\n  }\n\n  // //@ts-ignore\n  // if (!socket) {\n  //   socket = socketIOClient.io('http://localhost:5000')\n  // }\n  // //@ts-ignore\n\n  // socket.on('messageFromServer', (dataFromServer: string) => {\n  //   console.log(dataFromServer)\n  //   socket.emit('messageToServer', { data: 'This is from the client' })\n  // })\n\n  const sendMessage = (message: string) => {\n    socket.emit('newMessageToServer', { text: message })\n  }\n\n  // socket.on('messageToClients', (msg: any) => {\n  //   dispatch(messagesActions.addNewMessage(msg.text))\n  // })\n\n  ws = {\n    sendMessage,\n    initialize,\n  }\n\n  return <SocketContext.Provider value={ws}>{children}</SocketContext.Provider>\n}\n","/home/dmitrii/github_repos/slack-copy/client/src/redux/messages/messages.reducer.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/messages/messages.actions.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/messages/messages.selectors.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ServersList/ServersList.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ServersList/ServerItem/ServerItem.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/servers/servers.actions.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/servers/servers.reducer.ts",["198"],"import { serversActions, ServersActionTypes } from './servers.actions'\nconst INITIAL_STATE = {\n  servers: [] as any[],\n}\n\nexport type InitialStateType = typeof INITIAL_STATE\n\nconst serversReducer = (\n  state = INITIAL_STATE,\n  action: ServersActionTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'ADD_INITIAL_SERVERS':\n      return {\n        ...state,\n        servers: [...state.servers, ...action.payload],\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default serversReducer\n","/home/dmitrii/github_repos/slack-copy/client/src/redux/servers/servers.selectors.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageInput/MessageInput.tsx",["199","200","201","202"],"import React, { useContext, useState } from 'react'\nimport { RiSendPlane2Fill } from 'react-icons/ri'\nimport {\n  Box,\n  Flex,\n  IconButton,\n  Input,\n  InputGroup,\n  InputRightElement,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport { css } from '@emotion/react'\nimport { SocketContext } from '../../../socket.io/socket'\n\n// svg {\n//   width: 2rem;\n//   height: 2rem;\n//   fill: #006eff;\n//   margin-right: 2rem;\n// }\n\n// button {\n//   position: relative;\n//   border: 0;\n//   background: #fff;\n//   padding: 0;\n//   cursor: pointer;\n// }\n\n// input:first-child {\n//   flex: 1 1 100%;\n//   padding: 1rem;\n//   border: 0;\n//   font-size: 1rem;\n// }\n\nconst MessageInput: React.FC = () => {\n  const bgColor = useColorModeValue('gray.200', 'gray.900')\n  const [message, setMessage] = useState('')\n  const ws = useContext(SocketContext)\n\n  const handleMessageSubmit = () => {\n    ws.sendMessage(message)\n    setMessage('')\n  }\n\n  return (\n    <Flex\n      align='center'\n      justify='space-evenly'\n      mt='5'\n      h='4rem'\n      bg={bgColor}\n      boxShadow='2xl'\n    >\n      <Input\n        borderRadius='xl'\n        width='70%'\n        value={message}\n        onChange={(e) => setMessage(e.currentTarget.value)}\n      />\n      <RiSendPlane2Fill\n        onClick={handleMessageSubmit}\n        css={css`\n          width: 1.65rem;\n          height: 1.65rem;\n\n          cursor: pointer;\n        `}\n      />\n    </Flex>\n  )\n}\n\nexport default MessageInput\n","/home/dmitrii/github_repos/slack-copy/client/src/redux/rooms/rooms.reducer.ts",["203"],"import { roomsActions, RoomsActionTypes } from './rooms.actions'\nconst INITIAL_STATE = {\n  rooms: [] as any[],\n}\n\nexport type InitialStateType = typeof INITIAL_STATE\n\nconst roomsReducer = (\n  state = INITIAL_STATE,\n  action: RoomsActionTypes\n): InitialStateType => {\n  switch (action.type) {\n    case 'ADD_INITIAL_ROOMS':\n      return {\n        ...state,\n        rooms: [...state.rooms, ...action.payload],\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default roomsReducer\n","/home/dmitrii/github_repos/slack-copy/client/src/redux/rooms/rooms.actions.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/rooms/rooms.selectors.ts",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":9,"column":8,"nodeType":"210","messageId":"211","endLine":9,"endColumn":18},{"ruleId":"208","severity":1,"message":"212","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":14},{"ruleId":"204","replacedBy":"213"},{"ruleId":"206","replacedBy":"214"},{"ruleId":"208","severity":1,"message":"212","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":14},{"ruleId":"204","replacedBy":"215"},{"ruleId":"206","replacedBy":"216"},{"ruleId":"208","severity":1,"message":"212","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":14},{"ruleId":"208","severity":1,"message":"217","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":13},{"ruleId":"208","severity":1,"message":"218","line":15,"column":18,"nodeType":"210","messageId":"211","endLine":15,"endColumn":27},{"ruleId":"208","severity":1,"message":"219","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"208","severity":1,"message":"220","line":2,"column":17,"nodeType":"210","messageId":"211","endLine":2,"endColumn":23},{"ruleId":"208","severity":1,"message":"219","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":13},{"ruleId":"208","severity":1,"message":"221","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":25},{"ruleId":"208","severity":1,"message":"222","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":24},{"ruleId":"208","severity":1,"message":"217","line":4,"column":3,"nodeType":"210","messageId":"211","endLine":4,"endColumn":6},{"ruleId":"208","severity":1,"message":"223","line":6,"column":3,"nodeType":"210","messageId":"211","endLine":6,"endColumn":13},{"ruleId":"208","severity":1,"message":"224","line":8,"column":3,"nodeType":"210","messageId":"211","endLine":8,"endColumn":13},{"ruleId":"208","severity":1,"message":"225","line":9,"column":3,"nodeType":"210","messageId":"211","endLine":9,"endColumn":20},{"ruleId":"208","severity":1,"message":"226","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":22},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"@typescript-eslint/no-unused-vars","'ErrorPopUp' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.",["227"],["228"],["227"],["228"],"'Box' is defined but never used.","'namespace' is assigned a value but never used.","'css' is defined but never used.","'useRef' is defined but never used.","'messagesActions' is defined but never used.","'serversActions' is defined but never used.","'IconButton' is defined but never used.","'InputGroup' is defined but never used.","'InputRightElement' is defined but never used.","'roomsActions' is defined but never used.","no-global-assign","no-unsafe-negation"]