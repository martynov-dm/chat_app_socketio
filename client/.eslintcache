[{"/home/dmitrii/github_repos/slack-copy/client/src/index.tsx":"1","/home/dmitrii/github_repos/slack-copy/client/src/reportWebVitals.ts":"2","/home/dmitrii/github_repos/slack-copy/client/src/App.tsx":"3","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Sidebar.tsx":"4","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MainWindow.tsx":"5","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Description/Channels.tsx":"6","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomList.tsx":"7","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/CreateServer/CreateServer.tsx":"8","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomItem.tsx":"9","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageList.tsx":"10","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageItem.tsx":"11","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/CreateMessageForm/CreateMessageForm.tsx":"12","/home/dmitrii/github_repos/slack-copy/client/src/components/common/ThemeToggler.tsx":"13","/home/dmitrii/github_repos/slack-copy/client/src/api/api.ts":"14","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.actions.ts":"15","/home/dmitrii/github_repos/slack-copy/client/src/redux/store.ts":"16","/home/dmitrii/github_repos/slack-copy/client/src/redux/root-reducer.ts":"17","/home/dmitrii/github_repos/slack-copy/client/src/redux/root-saga.ts":"18","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.sagas.ts":"19","/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/ImageCropper.tsx":"20","/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/cropImage.ts":"21","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.reducer.ts":"22","/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.selectors.ts":"23","/home/dmitrii/github_repos/slack-copy/client/src/components/common/ErrorPopUp.tsx":"24","/home/dmitrii/github_repos/slack-copy/client/src/pages/Main.tsx":"25","/home/dmitrii/github_repos/slack-copy/client/src/pages/SignUp.tsx":"26","/home/dmitrii/github_repos/slack-copy/client/src/pages/SignIn.tsx":"27","/home/dmitrii/github_repos/slack-copy/client/src/components/SidebarHeader/SidebarHeader.tsx":"28","/home/dmitrii/github_repos/slack-copy/client/src/components/ChannelHeader/ChannelHeader.tsx":"29","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/UserMenu/UserMenu.tsx":"30"},{"size":793,"mtime":1608534471250,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1608036149411,"results":"33","hashOfConfig":"32"},{"size":769,"mtime":1609088133300,"results":"34","hashOfConfig":"32"},{"size":789,"mtime":1609164634130,"results":"35","hashOfConfig":"32"},{"size":759,"mtime":1609174578900,"results":"36","hashOfConfig":"32"},{"size":690,"mtime":1608486839070,"results":"37","hashOfConfig":"32"},{"size":467,"mtime":1608537462140,"results":"38","hashOfConfig":"32"},{"size":777,"mtime":1608642400529,"results":"39","hashOfConfig":"32"},{"size":301,"mtime":1608642358239,"results":"40","hashOfConfig":"32"},{"size":576,"mtime":1608546336940,"results":"41","hashOfConfig":"32"},{"size":1209,"mtime":1608642306089,"results":"42","hashOfConfig":"32"},{"size":1277,"mtime":1609217981140,"results":"43","hashOfConfig":"32"},{"size":606,"mtime":1608997175150,"results":"44","hashOfConfig":"32"},{"size":790,"mtime":1609140554410,"results":"45","hashOfConfig":"32"},{"size":1170,"mtime":1609140339690,"results":"46","hashOfConfig":"32"},{"size":1033,"mtime":1609059307470,"results":"47","hashOfConfig":"32"},{"size":292,"mtime":1609079312100,"results":"48","hashOfConfig":"32"},{"size":175,"mtime":1608713974353,"results":"49","hashOfConfig":"32"},{"size":1438,"mtime":1609143165390,"results":"50","hashOfConfig":"32"},{"size":2486,"mtime":1609080441030,"results":"51","hashOfConfig":"32"},{"size":1139,"mtime":1609051398130,"results":"52","hashOfConfig":"32"},{"size":1967,"mtime":1609139242790,"results":"53","hashOfConfig":"32"},{"size":806,"mtime":1609139461090,"results":"54","hashOfConfig":"32"},{"size":898,"mtime":1609142163340,"results":"55","hashOfConfig":"32"},{"size":807,"mtime":1609165071930,"results":"56","hashOfConfig":"32"},{"size":8318,"mtime":1609217777660,"results":"57","hashOfConfig":"32"},{"size":3520,"mtime":1609141396390,"results":"58","hashOfConfig":"32"},{"size":2809,"mtime":1609162850620,"results":"59","hashOfConfig":"32"},{"size":2887,"mtime":1609163202700,"results":"60","hashOfConfig":"32"},{"size":347,"mtime":1609175137100,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"gp4d3u",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},"/home/dmitrii/github_repos/slack-copy/client/src/index.tsx",[],["132","133"],"/home/dmitrii/github_repos/slack-copy/client/src/reportWebVitals.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/App.tsx",["134"],"import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\nimport Main from './pages/Main'\nimport SignUp from './pages/SignUp'\nimport { history } from './redux/store'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport SignIn from './pages/SignIn'\nimport ErrorPopUp from './components/common/ErrorPopUp'\n\nconst App: React.FC = () => {\n  return (\n    <ChakraProvider>\n      <ConnectedRouter history={history}>\n        <Switch>\n          <Route exact path='/' component={Main} />\n          <Route exact path='/sign-in' component={SignIn} />\n          <Route exact path='/sign-up' component={SignUp} />\n        </Switch>\n      </ConnectedRouter>\n    </ChakraProvider>\n  )\n}\n\nexport default App\n","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Sidebar.tsx",["135","136","137"],"import React from 'react'\nimport styled from 'styled-components'\nimport CreateServer from './CreateServer/CreateServer'\nimport RoomList from './RoomList/RoomList'\nimport { css } from '@emotion/react'\nimport { useColorModeValue } from '@chakra-ui/react'\nimport UserMenu from './UserMenu/UserMenu'\n\nconst Sidebar: React.FC = () => {\n  const bgColor = useColorModeValue('#EDF2F7', '#1A202C')\n\n  return (\n    <aside\n      css={css`\n        grid-column: 1/2;\n        grid-row: 2/3;\n        height: 100%;\n        width: 100%;\n\n        background-color: ${bgColor};\n\n        display: flex;\n        flex-direction: column;\n      `}\n    >\n      <div>Sidebar</div>\n      <UserMenu />\n\n      {/* <UserHeader />\n      <RoomList />\n      <CreateServer /> */}\n    </aside>\n  )\n}\n\nexport default Sidebar\n","/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MainWindow.tsx",["138"],"import React from 'react'\nimport { css } from '@emotion/react'\n\nimport styled from 'styled-components'\nimport MessageList from './MessageList/MessageList'\nimport CreateMessageForm from './CreateMessageForm/CreateMessageForm'\nimport { useColorModeValue } from '@chakra-ui/react'\n\nconst MainWindow = () => {\n  const bgColor = useColorModeValue('#FFFFFF', '#2D3748')\n\n  return (\n    <section\n      css={css`\n        grid-column: 2/3;\n        grid-row: 2/3;\n\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n\n        background-color: ${bgColor};\n      `}\n    >\n      <div>messages</div>\n      <MessageList />\n      <CreateMessageForm />\n    </section>\n  )\n}\n\nexport default MainWindow\n","/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/Description/Channels.tsx",[],["139","140"],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomList.tsx",[],["141","142"],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/CreateServer/CreateServer.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/RoomList/RoomItem.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageList.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/MessageList/MessageItem.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/MainWindow/CreateMessageForm/CreateMessageForm.tsx",["143","144","145","146","147"],"/home/dmitrii/github_repos/slack-copy/client/src/components/common/ThemeToggler.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/api/api.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.actions.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/store.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/root-reducer.ts",["148"],"import { errorActions } from './error/error.actions'\nimport { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport authReducer from './auth/auth.reducer'\n\nconst rootReducer = (history: any) =>\n  combineReducers({\n    router: connectRouter(history),\n    auth: authReducer,\n  })\n\nexport default rootReducer\n","/home/dmitrii/github_repos/slack-copy/client/src/redux/root-saga.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.sagas.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/ImageCropper.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ImageCropper/cropImage.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.reducer.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/redux/auth/auth.selectors.ts",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/common/ErrorPopUp.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/pages/Main.tsx",["149"],"import React from 'react'\nimport MainWindow from '../components/MainWindow/MainWindow'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport styled from 'styled-components'\nimport { css } from '@emotion/react'\nimport SidebarHeader from '../components/SidebarHeader/SidebarHeader'\nimport ChannelHeader from '../components/ChannelHeader/ChannelHeader'\n\nconst Main: React.FC = () => {\n  return (\n    <>\n      <main\n        css={css`\n          margin: auto;\n          width: 100vw;\n          height: 100vh;\n\n          display: grid;\n          grid-template-columns: minmax(12rem, 18%) 1fr;\n          grid-template-rows: minmax(3rem, 7%) 1fr;\n        `}\n      >\n        <SidebarHeader />\n        <Sidebar />\n\n        <ChannelHeader />\n        <MainWindow />\n      </main>\n    </>\n  )\n}\n\nexport default Main\n","/home/dmitrii/github_repos/slack-copy/client/src/pages/SignUp.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/pages/SignIn.tsx",["150","151"],"import { css } from '@emotion/react'\nimport React, { useRef, useState } from 'react'\nimport ThemeToggler from '../components/common/ThemeToggler'\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n} from '@chakra-ui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons'\n\nimport { authActions } from '../redux/auth/auth.actions'\nimport {\n  selectSignInReqError,\n  selectSignInReqStatus,\n} from '../redux/auth/auth.selectors'\nimport ErrorPopUp from '../components/common/ErrorPopUp'\n\nconst SignIn = () => {\n  const dispatch = useDispatch()\n  const status = useSelector(selectSignInReqStatus)\n  const errMessage = useSelector(selectSignInReqError)\n\n  const [login, setLogin] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [showPassword, setShowPassword] = useState(false)\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword)\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault()\n    dispatch(authActions.signInStart({ login, password }))\n  }\n\n  return (\n    <>\n      <ThemeToggler />\n\n      <Flex width='full' align='center' justifyContent='center'>\n        <Box\n          p={8}\n          maxWidth='500px'\n          borderWidth={1}\n          borderRadius={8}\n          boxShadow='lg'\n        >\n          <Box textAlign='center'>\n            <Heading>Login</Heading>\n          </Box>\n          <Box my={4} textAlign='left'>\n            <form onSubmit={handleSubmit}>\n              <FormControl mt={4} isRequired>\n                <FormLabel>Login</FormLabel>\n                <Input\n                  value={login}\n                  placeholder='Your login'\n                  size='lg'\n                  onChange={(event) => setLogin(event.currentTarget.value)}\n                />\n              </FormControl>\n              <FormControl mt={6} isRequired>\n                <FormLabel>Password</FormLabel>\n                <InputGroup>\n                  <Input\n                    value={password}\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder='*******'\n                    size='lg'\n                    onChange={(event) => setPassword(event.currentTarget.value)}\n                  />\n                  <InputRightElement width='3rem'>\n                    <IconButton\n                      mt={2}\n                      aria-label='toggle passwod visibility'\n                      size='md'\n                      onClick={handlePasswordVisibility}\n                      icon={showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                    />\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Button\n                type='submit'\n                colorScheme='blue'\n                variant='outline'\n                width='full'\n                mt={4}\n              >\n                {status === 'loading' ? (\n                  <CircularProgress\n                    size='30px'\n                    isIndeterminate\n                    color='blue.300'\n                  />\n                ) : (\n                  'Sign In'\n                )}\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Flex>\n\n      <ErrorPopUp\n        errMessage={errMessage}\n        clearAction={authActions.signInClear}\n      />\n    </>\n  )\n}\n\nexport default SignIn\n","/home/dmitrii/github_repos/slack-copy/client/src/components/SidebarHeader/SidebarHeader.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/ChannelHeader/ChannelHeader.tsx",[],"/home/dmitrii/github_repos/slack-copy/client/src/components/Sidebar/UserMenu/UserMenu.tsx",["152"],"import { Flex, useColorModeValue } from '@chakra-ui/react'\nimport React from 'react'\nimport { css } from '@emotion/react'\n\nconst UserMenu = (props: any) => {\n  const bgColor = useColorModeValue('gray.200', 'gray.900')\n\n  return (\n    <Flex mt='auto' h='4rem' bg={bgColor} boxShadow='2xl'>\n      UserMenu\n    </Flex>\n  )\n}\n\nexport default UserMenu\n",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":18},{"ruleId":"157","severity":1,"message":"161","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":20},{"ruleId":"157","severity":1,"message":"163","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":14},{"ruleId":"153","replacedBy":"164"},{"ruleId":"155","replacedBy":"165"},{"ruleId":"153","replacedBy":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","severity":1,"message":"168","line":4,"column":3,"nodeType":"159","messageId":"160","endLine":4,"endColumn":6},{"ruleId":"157","severity":1,"message":"169","line":6,"column":3,"nodeType":"159","messageId":"160","endLine":6,"endColumn":13},{"ruleId":"157","severity":1,"message":"170","line":8,"column":3,"nodeType":"159","messageId":"160","endLine":8,"endColumn":13},{"ruleId":"157","severity":1,"message":"171","line":9,"column":3,"nodeType":"159","messageId":"160","endLine":9,"endColumn":20},{"ruleId":"157","severity":1,"message":"172","line":40,"column":10,"nodeType":"159","messageId":"160","endLine":40,"endColumn":17},{"ruleId":"157","severity":1,"message":"173","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":22},{"ruleId":"157","severity":1,"message":"161","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":14},{"ruleId":"157","severity":1,"message":"174","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"175","line":2,"column":17,"nodeType":"159","messageId":"160","endLine":2,"endColumn":23},{"ruleId":"157","severity":1,"message":"174","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":13},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"@typescript-eslint/no-unused-vars","'ErrorPopUp' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","'CreateServer' is defined but never used.","'RoomList' is defined but never used.",["176"],["177"],["176"],["177"],"'Box' is defined but never used.","'IconButton' is defined but never used.","'InputGroup' is defined but never used.","'InputRightElement' is defined but never used.","'message' is assigned a value but never used.","'errorActions' is defined but never used.","'css' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]